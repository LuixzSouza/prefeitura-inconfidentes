// Este é o seu arquivo de schema Prisma.
// Ele define os modelos de dados da sua aplicação.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- SEUS TIPOS ENUM PERSONALIZADOS ---

enum nivel_acesso_enum {
  admin
  editor
  publicador
}

enum status_usuario_enum {
  ativo
  inativo
}

enum status_publicacao_enum {
  publicado
  rascunho
  agendado
}

enum tipo_vinculo_enum {
  efetivo
  comissionado
  contratado
}

enum status_licitacao_enum {
  aberta
  em_andamento @map("em andamento")
  finalizada
  suspensa
  cancelada
}

enum tipo_legislacao_enum {
  lei
  decreto
  portaria
  resolucao
}

enum status_legislacao_enum {
  em_vigor @map("em vigor")
  revogada
}

enum tipo_manifestacao_enum {
  sugestao
  reclamacao
  elogio
  denuncia
  informacao
}

enum status_solicitacao_enum {
  aberto
  em_analise @map("em_analise")
  respondido
  fechado
}

enum status_concurso_enum {
  aberto
  em_andamento @map("em_andamento")
  finalizado
  cancelado
}

// --- MODELOS (TABELAS) ---

// Módulo 5: Controle de Acesso
model usuarios {
  id           Int                 @id @default(autoincrement())
  nome         String              @db.VarChar(255)
  email        String              @unique @db.VarChar(100)
  senha        String              @db.VarChar(255)
  nivel_acesso nivel_acesso_enum   @default(editor)
  status       status_usuario_enum @default(ativo)
  created_at   DateTime            @default(now())
  updated_at   DateTime?           @updatedAt
  noticias     noticias[]
}

// Módulo 2: Estrutura Administrativa
model secretarias {
  id                    Int                       @id @default(autoincrement())
  nome                  String                    @db.VarChar(255)
  sigla                 String?                   @db.VarChar(20)
  responsavel_nome      String                    @db.VarChar(255)
  responsavel_cargo     String                    @default("Secretário(a) Municipal") @db.VarChar(100)
  email                 String?                   @db.VarChar(100)
  telefone              String?                   @db.VarChar(20)
  endereco              String?
  atribuicoes           String?
  servidores            servidores[]
  licitacoes            licitacoes[]
  ouvidoria_solicitacoes ouvidoria_solicitacoes[]
}

model servidores {
  id            Int               @id @default(autoincrement())
  nome          String            @db.VarChar(255)
  cargo         String            @db.VarChar(100)
  tipo_vinculo  tipo_vinculo_enum
  secretaria_id Int
  data_admissao DateTime          @db.Date
  secretaria    secretarias       @relation(fields: [secretaria_id], references: [id])
}

// Módulo 1: Conteúdo Principal
model noticias {
  id              Int                    @id @default(autoincrement())
  titulo          String                 @db.VarChar(255)
  subtitulo       String?                @db.VarChar(255)
  conteudo        String
  imagem_destaque String                 @db.VarChar(255)
  slug            String                 @unique @db.VarChar(255)
  data_publicacao DateTime
  status          status_publicacao_enum @default(rascunho)
  usuario_id      Int
  created_at      DateTime               @default(now())
  updated_at      DateTime?              @updatedAt
  usuario         usuarios               @relation(fields: [usuario_id], references: [id])

  @@index([slug])
  @@index([status])
  @@index([data_publicacao])
}

model paginas {
  id         Int       @id @default(autoincrement())
  titulo     String    @db.VarChar(255)
  conteudo   String
  slug       String    @unique @db.VarChar(255)
  updated_at DateTime? @updatedAt
}

model eventos {
  id                Int       @id @default(autoincrement())
  titulo            String    @db.VarChar(255)
  descricao         String
  data_inicio       DateTime
  data_fim          DateTime?
  local             String    @db.VarChar(255)
  imagem_divulgacao String?   @db.VarChar(255)
  created_at        DateTime  @default(now())
}

// Módulo 3: Transparência e Legislação
model licitacoes {
  id            Int                   @id @default(autoincrement())
  numero        String                @db.VarChar(50)
  modalidade    String                @db.VarChar(100)
  objeto        String
  data_abertura DateTime
  status        status_licitacao_enum @default(aberta)
  secretaria_id Int
  created_at    DateTime              @default(now())
  updated_at    DateTime?             @updatedAt
  secretaria    secretarias           @relation(fields: [secretaria_id], references: [id])
  arquivos      licitacao_arquivos[]

  @@index([status])
  @@index([modalidade])
}

model licitacao_arquivos {
  id              Int      @id @default(autoincrement())
  licitacao_id    Int
  titulo_arquivo  String   @db.VarChar(255)
  caminho_arquivo String   @db.VarChar(255)
  data_upload     DateTime @default(now())
  licitacao       licitacoes @relation(fields: [licitacao_id], references: [id], onDelete: Cascade)
}

model legislacao {
  id              Int                    @id @default(autoincrement())
  tipo            tipo_legislacao_enum
  numero          Int
  ano             Int
  data_sancao     DateTime               @db.Date
  ementa          String
  caminho_arquivo String                 @db.VarChar(255)
  status          status_legislacao_enum @default(em_vigor)

  @@index([tipo])
  @@index([ano])
}

// MODELO ADICIONADO
model diario_oficial {
  id              Int       @id @default(autoincrement())
  edicao_numero   Int
  data_publicacao DateTime  @db.Date
  descricao       String?
  caminho_arquivo String    @db.VarChar(255)
  created_at      DateTime  @default(now())

  @@index([data_publicacao])
  @@map("diario_oficial")
}

model concursos_processos_seletivos {
  id             Int                  @id @default(autoincrement())
  numero         String               @db.VarChar(50)
  ano            Int
  titulo         String               @db.VarChar(255)
  descricao      String?
  data_abertura  DateTime
  status         status_concurso_enum @default(aberto)
  caminho_edital String               @db.VarChar(255)
  created_at     DateTime             @default(now())

  @@index([status])
  @@index([ano])
  @@map("concursos_processos_seletivos")
}

// Módulo 4: Interação e Serviços
model galerias {
  id          Int      @id @default(autoincrement())
  titulo      String   @db.VarChar(255)
  descricao   String?
  data_evento DateTime @db.Date
  created_at  DateTime @default(now())
  fotos       fotos[]
}

model fotos {
  id             Int      @id @default(autoincrement())
  galeria_id     Int
  caminho_imagem String   @db.VarChar(255)
  legenda        String?  @db.VarChar(255)
  galeria        galerias @relation(fields: [galeria_id], references: [id], onDelete: Cascade)
}

model ouvidoria_solicitacoes {
  id                    Int                      @id @default(autoincrement())
  protocolo             String                   @unique @db.VarChar(20)
  nome_cidadao          String                   @db.VarChar(255)
  email_cidadao         String                   @db.VarChar(100)
  telefone_cidadao      String?                  @db.VarChar(20)
  tipo_manifestacao     tipo_manifestacao_enum
  assunto               String                   @db.VarChar(255)
  mensagem              String
  secretaria_destino_id Int?
  status                status_solicitacao_enum  @default(aberto)
  created_at            DateTime                 @default(now())
  secretaria_destino    secretarias?             @relation(fields: [secretaria_destino_id], references: [id], onDelete: SetNull)

  @@map("ouvidoria_solicitacoes")
}